from Crypto.Util.number import long_to_bytes

def iroot(k, n):
    u, s = n, n+1
    while u < s:
        s = u
        t = (k-1) * s + n // pow(s, k-1)
        u = t // k
    return s

n= 145168486611824798512500928700720416057672109421381649032647491626585363777663536760329091282480521264599056138129428316347788520462944774601767948082804850210527037825926343778630608647463270564607568785674860389885160463505118491944463355656667104142040351993930815412851101761802760798816765820674260212433
e= 3
ct= 37530210357019911564745869178744353489574739753898055505149474378061117520331373303142029731789532414422377476659284323458417917796734380782844658271097506966645175141870299711590260014894110588194748357862425591022048791572774181490132686392088143490575532353697125

m = iroot(e, ct)
print(long_to_bytes(m))