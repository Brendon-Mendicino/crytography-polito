from gmpy2 import isqrt
from Crypto.Util.number import long_to_bytes


def fermat(n):
    print("init")

    a = isqrt(n)
    b = a
    b2 = pow(a,2) - n

    print("a= "+str(a))
    print("b= " + str(b))

    print("b2=" + str(b2))
    print("delta-->" + str(pow(b, 2) - b2 % n)+"\n-----------")
    print("iterate")
    i = 0

    while True:
        if b2 == pow(b,2):
            print("found at iteration "+str(i))
            break;
        else:
            a +=1
            b2 = pow(a, 2) - n
            b = isqrt(b2)
        i+=1
        print("iteration="+str(i))
        print("a= " + str(a))
        print("b= " + str(b))
    print("b2 =" + str(b2))
    print("delta-->" + str(pow(b, 2) - b2 % n) + "\n-----------")

    p = a+b
    q = a-b

    return p,q

if __name__ == '__main__':

    n = 175868123399711861181730077113117115494563798081741591098985835342569540916917477872117202825927802339616943388240744159214691543597145795457986577589536786004314022463923590193009964208318337419234204345668297196008437517716976172181669817364432212926028097947137223496616506257983214887046664447600890085799
    
    c = 11510751051604418153287332304108705263447412605538172668077561300468168393891698008505292025133526505886935998446195607745183453811724468779021832497288263510806471690041821062008387323270726961348785427834201036430797005448033065968067953373302220513086520703871388763439367465240254470141978440400393298669
    
    e = 65537
    p, q = fermat(n)
    
    d = pow(e, -1, (p - 1) * (q - 1))
    m = pow(c, d, n)
    
    print(long_to_bytes(m))

